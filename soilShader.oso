OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader soilShader
param	color	cin	1 1 1		%read{0,4} %write{2147483647,-1}
oparam	color	cout	0 0 0		%read{2147483647,-1} %write{4,4}
oparam	float	dispOut	0		%read{11,19} %write{7,19}
global	point	P	%read{1,16} %write{2147483647,-1}
local	color	darkerCin	%read{4,4} %write{0,0}
local	float	noiseLayer	%read{4,4} %write{3,3}
const	color	$const1	0 0 0		%read{0,0} %write{2147483647,-1}
const	float	$const2	0.80000001		%read{0,0} %write{2147483647,-1}
const	float	$const3	0.5		%read{2,3} %write{2147483647,-1}
temp	float	$tmp2	%read{2,2} %write{1,1}
const	string	$const4	"perlin"		%read{1,17} %write{2147483647,-1}
temp	float	$tmp3	%read{3,3} %write{2,2}
const	float	$const5	0.07		%read{7,7} %write{2147483647,-1}
temp	float	$tmp4	%read{7,7} %write{6,6}
temp	point	$tmp5	%read{6,6} %write{5,5}
const	float	$const7	2		%read{5,5} %write{2147483647,-1}
const	float	$const8	0.039999999		%read{10,10} %write{2147483647,-1}
temp	float	$tmp6	%read{10,10} %write{9,9}
temp	point	$tmp7	%read{9,9} %write{8,8}
const	float	$const10	5		%read{8,8} %write{2147483647,-1}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	float	$const11	0.02		%read{14,14} %write{2147483647,-1}
temp	float	$tmp9	%read{14,14} %write{13,13}
temp	point	$tmp10	%read{13,13} %write{12,12}
const	float	$const13	11		%read{12,12} %write{2147483647,-1}
temp	float	$tmp11	%read{15,15} %write{14,14}
const	float	$const14	0.0099999998		%read{18,18} %write{2147483647,-1}
temp	float	$tmp12	%read{18,18} %write{17,17}
temp	point	$tmp13	%read{17,17} %write{16,16}
const	float	$const16	19		%read{16,16} %write{2147483647,-1}
temp	float	$tmp14	%read{19,19} %write{18,18}
code ___main___
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:12
#     float noiseLayer = 0.5 + 0.5*(float)noise("perlin",P);
	mix		darkerCin cin $const1 $const2 	%filename{"C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl"} %line{12} %argrw{"wrrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:13
#     cout = mix(darkerCin,cin,noiseLayer);
	noise		$tmp2 $const4 P 	%line{13} %argrw{"wrr"}
	mul		$tmp3 $const3 $tmp2 	%argrw{"wrr"}
	add		noiseLayer $const3 $tmp3 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:14
# 
	mix		cout darkerCin cin noiseLayer 	%line{14} %argrw{"wrrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:17
#     dispOut += 0.04*(float)noise("perlin",P*5);
	mul		$tmp5 P $const7 	%line{17} %argrw{"wrr"}
	noise		$tmp4 $const4 $tmp5 	%argrw{"wrr"}
	mul		dispOut $const5 $tmp4 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:18
#     dispOut += 0.02*(float)noise("perlin",P*11);
	mul		$tmp7 P $const10 	%line{18} %argrw{"wrr"}
	noise		$tmp6 $const4 $tmp7 	%argrw{"wrr"}
	mul		$tmp8 $const8 $tmp6 	%argrw{"wrr"}
	add		dispOut dispOut $tmp8 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:19
#     dispOut += 0.01*(float)noise("perlin",P*19);
	mul		$tmp10 P $const13 	%line{19} %argrw{"wrr"}
	noise		$tmp9 $const4 $tmp10 	%argrw{"wrr"}
	mul		$tmp11 $const11 $tmp9 	%argrw{"wrr"}
	add		dispOut dispOut $tmp11 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:20
# }
	mul		$tmp13 P $const16 	%line{20} %argrw{"wrr"}
	noise		$tmp12 $const4 $tmp13 	%argrw{"wrr"}
	mul		$tmp14 $const14 $tmp12 	%argrw{"wrr"}
	add		dispOut dispOut $tmp14 	%argrw{"wrr"}
	end
