OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader soilShader
param	color	cin	1 1 1		%read{3,3} %write{2147483647,-1}
oparam	color	cout	0 0 0		%read{2147483647,-1} %write{3,3}
oparam	float	dispOut	0		%read{10,18} %write{6,18}
global	point	P	%read{0,15} %write{2147483647,-1}
local	float	noiseLayer	%read{3,3} %write{2,2}
const	float	$const1	0.5		%read{1,2} %write{2147483647,-1}
temp	float	$tmp1	%read{1,1} %write{0,0}
const	string	$const2	"perlin"		%read{0,16} %write{2147483647,-1}
temp	float	$tmp2	%read{2,2} %write{1,1}
const	float	$const3	0.07		%read{6,6} %write{2147483647,-1}
temp	float	$tmp3	%read{6,6} %write{5,5}
temp	point	$tmp4	%read{5,5} %write{4,4}
const	float	$const5	2		%read{4,4} %write{2147483647,-1}
const	float	$const6	0.039999999		%read{9,9} %write{2147483647,-1}
temp	float	$tmp5	%read{9,9} %write{8,8}
temp	point	$tmp6	%read{8,8} %write{7,7}
const	float	$const8	5		%read{7,7} %write{2147483647,-1}
temp	float	$tmp7	%read{10,10} %write{9,9}
const	float	$const9	0.02		%read{13,13} %write{2147483647,-1}
temp	float	$tmp8	%read{13,13} %write{12,12}
temp	point	$tmp9	%read{12,12} %write{11,11}
const	float	$const11	11		%read{11,11} %write{2147483647,-1}
temp	float	$tmp10	%read{14,14} %write{13,13}
const	float	$const12	0.0099999998		%read{17,17} %write{2147483647,-1}
temp	float	$tmp11	%read{17,17} %write{16,16}
temp	point	$tmp12	%read{16,16} %write{15,15}
const	float	$const14	19		%read{15,15} %write{2147483647,-1}
temp	float	$tmp13	%read{18,18} %write{17,17}
code ___main___
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:28
#     cout = noiseLayer*cin;
	noise		$tmp1 $const2 P 	%filename{"C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl"} %line{28} %argrw{"wrr"}
	mul		$tmp2 $const1 $tmp1 	%argrw{"wrr"}
	add		noiseLayer $const1 $tmp2 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:29
# 
	mul		cout noiseLayer cin 	%line{29} %argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:31
#     dispOut += 0.04*(float)noise("perlin",P*5);
	mul		$tmp4 P $const5 	%line{31} %argrw{"wrr"}
	noise		$tmp3 $const2 $tmp4 	%argrw{"wrr"}
	mul		dispOut $const3 $tmp3 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:32
#     dispOut += 0.02*(float)noise("perlin",P*11);
	mul		$tmp6 P $const8 	%line{32} %argrw{"wrr"}
	noise		$tmp5 $const2 $tmp6 	%argrw{"wrr"}
	mul		$tmp7 $const6 $tmp5 	%argrw{"wrr"}
	add		dispOut dispOut $tmp7 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:33
#     dispOut += 0.01*(float)noise("perlin",P*19);
	mul		$tmp9 P $const11 	%line{33} %argrw{"wrr"}
	noise		$tmp8 $const2 $tmp9 	%argrw{"wrr"}
	mul		$tmp10 $const9 $tmp8 	%argrw{"wrr"}
	add		dispOut dispOut $tmp10 	%argrw{"wrr"}
# C:\\Users\\Ben\\Documents\\Bournemouth\\SimulationAndRendering\\Rendering\\RendermanProject\\soilShader.osl:34
# }
	mul		$tmp12 P $const14 	%line{34} %argrw{"wrr"}
	noise		$tmp11 $const2 $tmp12 	%argrw{"wrr"}
	mul		$tmp13 $const12 $tmp11 	%argrw{"wrr"}
	add		dispOut dispOut $tmp13 	%argrw{"wrr"}
	end
