shader soilShader
(
    color cin = 1,
    output color cout = 0,
    output float dispOut = 0
)

{
//------------------------NOISE FUNCTION------------------------------------    
    
    float perlinNoise(  float amp, float persistence, float freq,
                        float lacunarity, float octaves,
                        float seed, point w)
    {
        float val = 0;
        for(int i=0; i<octaves; ++i)
        {
            val += amp*(float)noise("perlin", w*freq + seed);
            amp *= persistence;
            freq *= lacunarity;
        }
        return val;
    }

//---------------------------MAIN SHADER-----------------------------------

    color baseNoiseCol = mix(cin,color(0,0,0),0.5);
    float noiseLayer = 0.5 + 0.5*(float)noise("perlin",P);
    cout = mix(baseNoiseCol,cin,noiseLayer)*noiseLayer*0.5;

    dispOut = 0.07*(float)noise("perlin",P*2);
    dispOut += 0.04*(float)noise("perlin",P*5);
    dispOut += 0.02*(float)noise("perlin",P*11);
    dispOut += 0.01*(float)noise("perlin",P*19);
}