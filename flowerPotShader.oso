OpenShadingLanguage 1.00
# Compiled by oslc 1.8.2.pixar1697a56
# options: 
shader flowerPotShader
param	color	cin	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	cout	0 0 0		%read{2147483647,-1} %write{5,5}
global	point	P	%read{1,3} %write{2147483647,-1}
local	float	repeatCount	%read{2,4} %write{0,0}
local	float	s	%read{5,5} %write{2,2}
local	float	t	%read{5,5} %write{4,4}
const	int	$const1	6		%read{0,0} %write{2147483647,-1}
const	int	$const2	0		%read{1,1} %write{2147483647,-1}
temp	float	$tmp1	%read{2,2} %write{1,1}
const	int	$const3	1		%read{3,3} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{3,3}
const	string	$const4	"cell"		%read{5,5} %write{2147483647,-1}
code ___main___
# flowerPotShader.osl:8
#     float repeatCount = 6;
	assign		repeatCount $const1 	%filename{"flowerPotShader.osl"} %line{8} %argrw{"wr"}
# flowerPotShader.osl:9
#     float s = P[0] * repeatCount;
	compref		$tmp1 P $const2 	%line{9} %argrw{"wrr"}
	mul		s $tmp1 repeatCount 	%argrw{"wrr"}
# flowerPotShader.osl:10
#     float t = P[1] * repeatCount;
	compref		$tmp2 P $const3 	%line{10} %argrw{"wrr"}
	mul		t $tmp2 repeatCount 	%argrw{"wrr"}
# flowerPotShader.osl:11
#     cout = (color)noise("cell",s,t);
	noise		cout $const4 s t 	%line{11} %argrw{"wrrr"}
	end
